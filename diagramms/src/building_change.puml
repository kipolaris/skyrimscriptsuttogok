@startuml building_change

title Szobamanipuláció

actor "Building AI" as ai
Participant Room1 as sz
Participant Room2 as sz2
Participant Room3 as sz3

opt ajtó manipuláció

    ai->sz ++: requestDoorinfo
    note right: Szükséges, hogy tudjuk, milyen állapotból indulunk.
    return info

    ai->>ai : randomizeFinalState
    note right: random meghatározza, hogy a megadott ajtók \n végül milyenek legyenek (pl. egyirányúak, tűnjenek el, stb.)

    ai->>sz : giveDoors(ArrayList<Door>)
    activate sz

    sz->>sz : setDoors
    deactivate sz
    note right : Egy ajtó két szobához is tartozhat,\n tehát ezzel a szomszédok is frissülnek.

end

opt szoba osztódás

    ai->>sz : split

end

opt szoba egyesítés

    ai->sz ++: requestData
    return data
    ai->sz2 ++: requestData
    return data

    ai->>ai ++: mergeRoom()
    ai->>ai : calculate mergedData
    ai->>sz !!: delete
    ai->>sz2 !!: delete
    ai->>sz3 **: create
    ai->>sz3 : setData(mergedData)
    deactivate ai

end

@enduml